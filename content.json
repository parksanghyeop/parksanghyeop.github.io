{"pages":[{"title":"about","text":"hi","link":"/about/index.html"}],"posts":[{"title":"Hello World","text":"Welcome to Hexo! This is your very first post. Check documentation for more info. If you get any problems when using Hexo, you can find the answer in troubleshooting or you can ask me on GitHub. Quick StartCreate a new post1$ hexo new &quot;My New Post&quot; More info: Writing Run server1$ hexo server More info: Server Generate static files1$ hexo generate More info: Generating Deploy to remote sites1$ hexo deploy More info: Deployment","link":"/2022/01/30/hello-world/"},{"title":"test POST","text":"상속 상속은 무언가로부터 물려 받다는 개념이다. 현실세계에서는 부모님으로부터 자식들이 재산을 물려받는 것과 비슷하다고 보면된다. 객체지향에서의 상속은 inheritance가 아닌 extends(확장)로 이해하는 것이 좋다. 상속은 코드 재사용성을 높이는 기능이지만 항상 최선은 아니다. 그러나 아래와 같은 경우를 보면 안전하다고 말한다. 클래스가 상속을 위해 특별히 설계되었거나 구조화가 잘 된 클래스를 확장의 목적으로 상속하는것이 안전하다. 동일 개발자가 하위 클래스와 상위 클래스의 통제를 담당하는 경우 즉, 같은 패키지내에서 상속하는것은 안전하다. 객체 지향의 상속에 대한 잘못된예 위 그림은 현실 세계의 상속이다. 할아버지는 아버지에게 물려주고 아버지는 아들에게 물려준다. 객체 지향의 상속에 대한 올바른 예 - 분류도 위 관계는 상속 관계가 아니다. 동물은 포유류와 조류의 부모가 아니다. 고래 또한 부모가 포유류가 될 수 없다. 동물이란것을 조금 더 세분화하여 분류하는 것이다. 즉, 객체지향에서의 상속은 상위 클래스의 특성을 하위 클래스에서 상속하고 필요한것을 부가하여 확장해서 사용할 수 있다고 보면된다. 자바상속의 특징 다중 상속을 지원하지 않는다. extends 뒤에는 하나의 부모 클래스만 올 수 있다. 상속의 횟수 제한이 없다. 자바에서의 최상위 계층 부모 클래스는 java.lang.Object이다. 즉, Object 클래스는 super class를 가지지 않는다. 상속을 할 때 상위 클래스는 물려줄 특성이 풍부하면 좋고 반대로 인터페이스는 구현을 강제할 메서드의 개수가 적을 수록 좋다. 상속을 왜 해? 상위 클래스의 공통적인 부분을 사용하기 위해서이다. 유지보수가 쉽다. 중복이 적어진다. 통일성이 있다. 확장성이 용이해진다. 모듈화를 통해 재사용이 가능해진다. 코드가 간결해진다. 개발시간을 단축할 수 있다. 상속의 단점 상속을 사용하면 기능 추가 / 변경시에 예외나 버그가 발생하게 되면 어디에서 발생한지 예측을 하기가 힘들다. 상속 구조가 복잡하면 더욱 예측하기 힘들어진다. 불필요한 기능을 원치 않는다 해도 상속해야한다. 자료구조에서 Stack은 Vector를 상속하고 있는데, Vector의 단점을 모두 상속받는다. Vector 단점 ArrayList를 상속받아 사용하고, synchronized가 걸려있다.(Thread-saffe) 캡슐화 원칙을 위반한다. 상위 클래스의 구현이 하위 클래스에게 노출되는 상속은 캡슐화를 깨뜨린다. 캡슐화가 깨짐으로서 하위 클래스가 상위 클래스에 강하게 결합, 의존하게 되고 강한 결합, 의존은 변화에 유연하게 대처하기 어렵다. 이어서… 기존 블로그 내용 마크다운으로 다시 적을예정 12345public class Paraent { public Parent() { System.out.println(&quot;Parent Constructor&quot;); }}","link":"/2022/01/30/test-POST/"}],"tags":[{"name":"java","slug":"java","link":"/tags/java/"},{"name":"상속","slug":"상속","link":"/tags/%EC%83%81%EC%86%8D/"}],"categories":[{"name":"java","slug":"java","link":"/categories/java/"}]}